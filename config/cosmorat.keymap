#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&soft_off { hold-time-ms = <3000>; };

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "Auto Shift";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <0>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            require-prior-idle-ms = <125>;
        };

        ca: ctrl_alt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LALT>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        left_side {
            bindings = <
&kp TAB         &kp Q      &kp W          &kp E  &kp R  &kp T
&kp LEFT_SHIFT  &kp A      &kp S          &kp D  &kp F  &kp G
&mo 7           &kp Z      &kp X          &kp C  &kp V  &kp B
&mo 1           &kp SPACE  &kp BACKSPACE  &mo 2  &ca    &kp LEFT_WIN
            >;
        };

        right_side {
            bindings = <
&kp LBKT         &kp P     &kp O    &kp I      &kp U   &kp Y
&as LS(SQT) SQT  &kp SEMI  &kp L    &kp K      &kp J   &kp H
&kp RBKT         &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp N
&trans           &trans    &trans   &trans     &trans  &trans
            >;
        };

        numbers {
            bindings = <
&kp ESC  &kp N1     &kp N2     &kp N3     &kp N4    &kp N5
&to 5    &kp N6     &kp N7     &kp N8     &kp N9    &kp N0
&tog 3   &kp MINUS  &kp EQUAL  &kp GRAVE  &kp BSLH  &kp ENTER
&trans   &trans     &trans     &trans     &trans    &trans
            >;
        };

        arrows {
            bindings = <
&kp LC(LA(DELETE))  &none         &none         &kp UP_ARROW    &none         &bt BT_CLR
&kp DEL             &out OUT_BLE  &kp LEFT      &kp DOWN_ARROW  &kp RIGHT     &out OUT_USB
&bt BT_SEL 0        &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &kp ENTER
&tog 3              &tog 4        &tog 3        &tog 3          &tog 3        &tog 6
            >;
        };

        f {
            bindings = <
&kp F1     &kp F2    &kp F3     &kp F4   &kp F5            &kp F6
&kp F7     &kp F8    &kp F9     &kp F10  &kp F11           &kp F12
&kp LCTRL  &kp LALT  &kp LSHFT  &none    &ext_power EP_ON  &ext_power EP_OFF
&to 0      &to 0     &to 0      &to 0    &to 0             &to 0
            >;
        };

        mouse {
            bindings = <
&none        &none      &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &none
&none        &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&bootloader  &none      &none           &none           &none            &none
&mkp LCLK    &mkp RCLK  &tog 5          &mkp MCLK       &tog 5           &tog 5
            >;
        };

        gaming_mode {
            bindings = <
&kp T      &kp TAB    &kp Q  &kp W  &kp E         &kp R
&kp G      &kp LSHFT  &kp A  &kp S  &kp D         &kp F
&kp B      &kp LCTRL  &kp Z  &kp X  &kp C         &kp V
&kp SPACE  &mo 2      &to 0  &mo 3  &kp LEFT_ALT  &kp LEFT_WIN
            >;
        };

        switch {
            bindings = <
&none       &none          &none       &none         &none            &none
&none       &none          &none       &none         &soft_off        &none
&none       &none          &none       &none         &none            &none
&bt BT_NXT  &kp LG(SPACE)  &bt BT_PRV  &out OUT_TOG  &kp PRINTSCREEN  &none
            >;
        };
    };
};

&msc {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
};
